version: "3.5"
services:
  jaeger:
    image: jaegertracing/all-in-one:latest
    container_name: jaeger
    networks:
      - backend
    volumes:
      - "./jaeger-ui.json:/etc/jaeger/jaeger-ui.json"
    command: --query.ui-config /etc/jaeger/jaeger-ui.json
    environment:
      - METRICS_STORAGE_TYPE=prometheus
      - PROMETHEUS_SERVER_URL=http://prometheus:9090
    ports:
      - "14250:14250"
      - "14268:14268"
      - "6831:6831/udp"
      - "16686:16686"
      - "16685:16685"

  otel_collector:
    image: otel/opentelemetry-collector-contrib:latest
    container_name: otel_collector
    networks:
      backend:
        aliases:
          - otel-collector
    volumes:
      - "./otel-collector-config.yml:/etc/otelcol/otel-collector-config.yml"
    command: --config /etc/otelcol/otel-collector-config.yml
    ports:
      - "4317:4317"
      - "8889:8889"
    depends_on:
      - jaeger

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    networks:
      - backend
    volumes:
      - "./prometheus.yml:/etc/prometheus/prometheus.yml"
    ports:
      - "9090:9090"

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - "3000:3000"
    depends_on:
      - prometheus
      - jaeger
    networks:
      - backend
    volumes:
      - grafana-storage:/var/lib/grafana

  loki:
    image: grafana/loki:2.9.3
    container_name: loki
    ports:
      - "3100:3100"
    networks:
      - backend
    command: -config.file=/etc/loki/local-config.yaml

  promtail:
    image: grafana/promtail:2.9.3
    container_name: promtail
    networks:
      - backend
    volumes:
      - ./app.log:/etc/app/app.log
      - ./promtail-config.yml:/etc/promtail/config.yml
    command: -config.file=/etc/promtail/config.yml
    depends_on:
      - loki

volumes:
  grafana-storage:

networks:
  backend:
    external: true

